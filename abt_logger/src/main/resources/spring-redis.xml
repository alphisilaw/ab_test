<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
     	http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">
	
	<!-- 加载配置文件 -->
	<bean id="propertyConfigurerForRedis" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
	    <property name="order" value="2" />  
	    <property name="ignoreUnresolvablePlaceholders" value="true" />  
	    <property name="location">  
	       <value>classpath:redis.properties</value>  
	    </property>  
	</bean> 
  
    <!-- 启用缓存注解功能，这个是必须的，否则注解不会生效，另外，该注解一定要声明在spring主配置文件中才会生效 -->  
    <cache:annotation-driven cache-manager="cacheManager" />
  
    <!-- spring自己的换管理器，这里定义了两个缓存位置名称 ，既注解中的value -->  
    <bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">  
        <property name="caches">  
            <set>  
                <bean class="com.web.abt.redis.RedisCache">  
                    <property name="redisTemplate" ref="redisTemplate" />  
                    <property name="name" value="caseConfig"/>  
                </bean>
                <!-- 
                <bean class="org.cpframework.cache.redis.RedisCache">  
                    <property name="redisTemplate" ref="redisTemplate02" />  
                    <property name="name" value="commonCache02"/>  
                </bean>
                 -->
            </set>  
        </property>  
    </bean>
  
    <!-- redis 相关配置 -->  
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">  
        <property name="maxIdle" value="${redis.maxIdle}" />        
        <property name="maxWaitMillis" value="${redis.maxWait}" />  
        <property name="testOnBorrow" value="${redis.testOnBorrow}" />  
    </bean>  
  
    <bean id="connectionFactory"  
        class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"  
        p:host-name="${redis.host}" p:port="${redis.port}" p:pool-config-ref="poolConfig"  
        p:database="${redis.database}" />  
  
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">  
        <property name="connectionFactory" ref="connectionFactory" />   
        <property name="defaultSerializer">  
            <bean class="com.web.abt.redis.KryoRedisSerializer"/>  
        </property>  
        <property name="keySerializer">  
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>  
        </property>
    </bean>  
    
    <!-- 
    <bean id="connectionFactory02"  
        class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"  
        p:host-name="${redis.host}" p:port="${redis.port}" p:pool-config-ref="poolConfig"  
        p:database="${redis.database}" />  
  
    <bean id="redisTemplate02" class="org.springframework.data.redis.core.RedisTemplate">  
        <property name="connectionFactory" ref="connectionFactory02" />  
    </bean>
    -->
</beans>
